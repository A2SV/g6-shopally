// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	"context"

	domain "github.com/shopally-ai/pkg/domain"
	"github.com/stretchr/testify/mock"
)

// AlibabaGateway is an autogenerated mock type for the AlibabaGateway type
type AlibabaGateway struct {
	mock.Mock
}

// FetchProducts provides a mock function with given fields: ctx, query, filters
func (_m *AlibabaGateway) FetchProducts(ctx context.Context, query string, filters map[string]interface{}) ([]*domain.Product, error) {
	ret := _m.Called(ctx, query, filters)

	if len(ret) == 0 {
		panic("no return value specified for FetchProducts")
	}

	var r0 []*domain.Product
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, map[string]interface{}) ([]*domain.Product, error)); ok {
		return rf(ctx, query, filters)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, map[string]interface{}) []*domain.Product); ok {
		r0 = rf(ctx, query, filters)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Product)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, map[string]interface{}) error); ok {
		r1 = rf(ctx, query, filters)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAlibabaGateway creates a new instance of AlibabaGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAlibabaGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *AlibabaGateway {
	m := &AlibabaGateway{}
	m.Mock.Test(t)
	t.Cleanup(func() { m.AssertExpectations(t) })
	return m
}
