// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	"context"

	"firebase.google.com/go/v4/messaging"
	"github.com/stretchr/testify/mock"
)

// FCMClient is an autogenerated mock type for the FCMClient interface
type FCMClient struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, msg
func (_m *FCMClient) Send(ctx context.Context, msg *messaging.Message) (string, error) {
	ret := _m.Called(ctx, msg)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *messaging.Message) (string, error)); ok {
		return rf(ctx, msg)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *messaging.Message) string); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *messaging.Message) error); ok {
		r1 = rf(ctx, msg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFCMClient creates a new instance of FCMClient.
func NewFCMClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *FCMClient {
	m := &FCMClient{}
	m.Mock.Test(t)
	t.Cleanup(func() { m.AssertExpectations(t) })
	return m
}